March 2017:  setup notes for raspberry pi 3
===========================================

We're assuming you have an RP3 in hand, fully assembled. There is plenty
of information on https://www.raspberrypi.org and many other sites how
to get one.

0) Sadly, the RP3 "kit" that we got was preloaded with some annoying
   (citrix?) bloatware, with no root access that made us go through
   hoops to even run "apt install".  So decided to grab the latest
   true RASPIAN distro:

1) grab the full raspian version, not the 'lite', for development. This
   version has the PIXEL windowing system. The 'lite' version has no
   graphical interface. Both have username "pi" as default, and if you
   need a password, it's "raspberry". The full version automagically
   logs in as this user, so you don't even need a password yet.

   It's possible we will give instructions how to deal with the lite
   version, as this may be a more efficient way to distribute production
   images.

   wget -c http://director.downloads.raspberrypi.org/......zip
   unzip ...zip
   dd bs=1M if=...img of=/dev/mm...

   This microSD is now ready for boot in your RP3.

2) Boot the RP3 with this freshly imaged RP3.  During the boot this image will be modified.

   In my case my screen wasn't fully utilitize. I had to edit a config file and try out
   a few video modes... each reboot was 30 seconds, but be sure to read up on
     	 https://www.raspberrypi.org/documentation/configuration/config-txt/README.md

   sudo nano /boot/config.txt
   	# 
   	hdmi_group=1
	hdmi_mode=16


3) A number of tools will be needed for INDI development. This will cost some download time, be
   prepared for long waits if you're on a slow link to the internet. I followed these instructions:
   	    http://indilib.org/support/tutorials/139-indi-library-on-raspberry-pi.html
	    http://indilib.org/download/raspberry-pi/category/6-raspberry-pi.html

   sudo apt install cdbs libcfitsio3-dev libnova-dev libusb-1.0-0-dev libjpeg-dev libusb-dev libtiff5-dev libftdi-dev fxload libkrb5-dev libcurl4-gnutls-dev libraw-dev libgphoto2-dev libgsl0-dev dkms libboost-regex-dev libgps-dev libdc1394-22-dev

   (this was 229MB in my case)

   I had some complaints about missing files, had to "sudo apt update" and do those missing ones again.

   missing:   sudo apt install   libtiff5-dev libraw-dev    libboost-regex-dev   
   
   then grab the latest libindi for RPI (no 

   tar -xzf libindi_1.4.1_rpi.tar.gz
   cd libindi_1.4.1_rpi
   sudo dpkg -i *.deb

   perhaps a little more direct:
   
   wget -c http://indilib.org/download/raspberry-pi/send/6-raspberry-pi/9-indi-library-for-raspberry-pi.html
   mv 9-indi-library-for-raspberry-pi.html libindi_1.4.1_rpi.tar.gz 
   tar -xzf libindi_1.4.1_rpi.tar.gz
   cd libindi_1.4.1_rpi
   sudo dpkg -i *.deb

4) For the python interface, pyindi-client is the preferred route, but you will need two more tools for this.
   You can skip this if you want to test the shell interface, and go to step 5)

   sudo apt install swig python-dev
   (this was 30.1MB in my case)
   
   sudo pip install pyindi-client



5) To test out if INDI works, you can use the CCD simulator. You will need 3 terminal windows.

   5-1) start the indiserver with the simulator:

      	    indiserver -vvv indi_simulator_ccd

   5-2) grab properties while the next command(s) will be running, lets say with a 60 second window

   	     indi_getprop -t 60

   5-3) turn the CCD on, and set an exposure time

   	     indi_setprop "CCD Simulator.CONNECTION.CONNECT=On"
	     indi_setprop "CCD Simulator.CCD_EXPOSURE.CCD_EXPOSURE_VALUE=1.0"

        You will then see a file "CCD Simulator.CCD1.CCD1.fits" appear.



6) Assuming this method works for the SX as well, we would repeat this, again in three different windows

   6-1) start the server

   	      indiserver -vvv indi_sx_ccd

   6-2) grab properties for a window of time

   	      indi_getprop -t 60

   6-3) turn on CCD and set an exposure:

   	      indi_setprop "SX CCD SuperStar.CONNECTION.CONNECT=On"
   	      indi_setprop "SX CCD SuperStar.CCD_EXPOSURE.CCD_EXPOSURE_VALUE=1.2"

        now you should see a new fits file in this directory. 
	Probably "SX CCD SuperStar.CCD1.CCD1.fits"

